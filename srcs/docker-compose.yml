version: '3.5'

services:
  mariadb:
    container_name: mariadb
    build:
      context: ./requirements/mariadb
      dockerfile: Dockerfile
    restart: unless-stopped
    volumes:
      - "db:/var/lib/mysql"
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_ROOT_PWD: ${MYSQL_ROOT_PWD}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PWD: ${MYSQL_PWD}
    ports:
      - '3306:3306'
    networks:
      - backend

  wordpress:
    container_name: wordpress
    build:
      context: ./requirements/wordpress
      dockerfile: Dockerfile
    restart: unless-stopped
    volumes:
      - "wordpress:/var/www/wordpress"
    depends_on:
      - mariadb
    environment:
      DOMAIN_NAME: ${DOMAIN_NAME}
      WORDPRESS_TITLE: ${WORDPRESS_TITLE}
      WORDPRESS_DB_NAME: ${MYSQL_DATABASE}
      WORDPRESS_DB_USER: ${MYSQL_USER}
      WORDPRESS_DB_PWD: ${MYSQL_PWD}
      WORDPRESS_DB_CHARSET: ${WORDPRESS_DB_CHARSET}
      WORDPRESS_ADMIN: ${WORDPRESS_ADMIN}
      WORDPRESS_ADMIN_PWD: ${WORDPRESS_ADMIN_PWD}
      WORDPRESS_ADMIN_EMAIL: ${WORDPRESS_ADMIN_EMAIL}
      WORDPRESS_USER: ${WORDPRESS_USER}
      WORDPRESS_USER_EMAIL: ${WORDPRESS_USER_EMAIL}
    ports:
      - '9000:9000'
    networks:
      - frontend
      - backend

  nginx:
    container_name: nginx
    build:
      context: ./requirements/nginx
      dockerfile: Dockerfile
    restart: unless-stopped
    depends_on:
      - wordpress
    volumes:
      - "wordpress:/var/www/wordpress"
    ports:
      - '443:443'
    networks:
      - frontend

networks:
  frontend:
  backend:

volumes:
  db:
    name: mariadb_volume
    driver: local
    driver_opts:
      o: bind
      type: volume
      device: '/home/anadege/data/db'
  wordpress:
    name: wordpress_volume
    driver: local
    driver_opts:
      o: bind
      type: volume
      device: '/home/anadege/data/wordpress'
